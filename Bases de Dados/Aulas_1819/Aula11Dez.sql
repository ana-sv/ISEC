-- Teste 13-09-2013

-- NOTAS IMPORTANTES 
-- exemplo: TEMPO IS NULL -> não se usa nunca =


-- ex 1
CREATE TABLE CICLISTA (
    DORSAL NUMBER(3) NOT NULL,
    SIGLA CHAR(3),
    NOME VARCHAR(29),
    DATA_NASCIMENTO DATE,
    ALTURA NUMBER(3),
    PESO NUMBER(4,1),
    GENERO VARCHAR(1),
    PAIS VARCHAR(30),
    CONSTRAINT DORSAL_PK PRIMARY KEY,
    CONSTRAINT SIGLA_FK FOREIGN KEY,
);


-- Resolvido pelo prof
CONSTRAINT PK_PARTICIPA
PRIMARY KEY(DORSAL, NUM_ETAPA),
CONSTRAINT FK_PART_CICLI
FOREIGN KEY(DORSAL) REFERENCES CICLISTA(DORSAL),
CONSTRAINT FK_PART_ETAPA
FOREIGN KEY(NUM_ETAPA) REFERENCES ETAPA(NUM_ETAPA);


CREATE TABLE PARTICIPA(
    DORSAL NUMBER(3),
    NUM_ETAPA NUMBER(2),
    TEMPO NUMBER(5),
    CONSTRAINT DORSAL_PK PRIMARY KEY,
    CONSTRAINT DORSAL_FK FOREIGN KEY,
);

CREATE TABLE ETAPA (
    NUM_ETAPA NUMBER(2) NOT NULL,
    LOCAL_PARTIDA VARCHAR(50),
    LOCAL_CHEGADA VARCHAR(50),
    DISTANCIA NUMBER(4),
    DATAHORA_PARTICIPA DATE,
    CONSTRAINT NUM_ETAPA_PK PRIMARY KEY,
    CONSTRAINT NUM_ETAPA_FK FOREIGN KEY,  
);


-- ex 2 

SELECT D.DORSAL "Dorsal", C.NOME "Nome", C.PAIS "País", EQ.NOME "Equipa"
FROM CICLISTA C, PARTICIPA P, ETAPA ET, EQUIPA EQ
WHERE C.SIGLA=EQ.SIGLA
AND C.DORSAL = P.DORSAL
AND P.NUM_ETAPA = ET.NUM_ETAPA
AND C.GENERO = 'F'
AND TO CHAR (C.DATA_NASCIMENTO 'YYYY') > '1989'
AND UPPER(LOCAL_PARTIDA)= 'COIMBRA'
AND TEMPO IS NULL
ORDER BY 1;


-- ex 3

SELECT D.DORSAL "Dorsal", C.NOME "Nome",
    ROUND(SUM(DISTANCIA),1) "Distancia",
    SUM(DISTANCIA) / SUM(TEMPO/3600) "Vel. Média(km/h)"
FROM EQUIPA EQ , CICLISTA C, PARTICIPA P, ETAPA E
WHERE C.SIGLA=EQ.SIGLA
AND C.DORSAL = P.DORSAL
AND P.NUM_ETAPA = ET.NUM_ETAPA
AND INITCAP(EQ.NOME) = 'Os Maiores'
AND PESO >= 0
GROUP BY C.DORSAL,C.NOME, 
HAVING COUNT (MUM_ETAPA) >= 3
ORDER BY 4 DESC, C.DATA_NASCIMENTO DESC; --> erro



SELECT D.DORSAL "Dorsal", C.NOME "Nome",
    ROUND(SUM(DISTANCIA),1) "Distancia",
    SUM(DISTANCIA) / SUM(TEMPO/3600) "Vel. Média(km/h)"
FROM EQUIPA EQ , CICLISTA C, PARTICIPA P, ETAPA E
WHERE C.SIGLA=EQ.SIGLA
AND C.DORSAL = P.DORSAL
AND P.NUM_ETAPA = ET.NUM_ETAPA
AND INITCAP(EQ.NOME) = 'Os Maiores'
AND PESO >= 0
GROUP BY C.DORSAL,C.NOME, C.DATA_NASCIMENTO
HAVING COUNT (MUM_ETAPA) >= 3
ORDER BY 4 DESC, C.DATA_NASCIMENTO DESC; -- válida



SELECT D.DORSAL "Dorsal", C.NOME "Nome",
    ROUND(SUM(DISTANCIA),1) "Distancia",
    SUM(DISTANCIA) / SUM(TEMPO/3600) "Vel. Média(km/h)"
FROM EQUIPA EQ , CICLISTA C, PARTICIPA P, ETAPA E
WHERE C.SIGLA=EQ.SIGLA
AND C.DORSAL = P.DORSAL
AND P.NUM_ETAPA = ET.NUM_ETAPA
AND INITCAP(EQ.NOME) = 'Os Maiores'
AND PESO >= 0
GROUP BY C.DORSAL,C.NOME, C.DATA_NASCIMENTO
HAVING COUNT (MUM_ETAPA) >= 3
ORDER BY 4 DESC, MAX(C.DATA_NASCIMENTO) DESC; --> válida




-- ex 4 a

CREATE VIEW VW_MAIORETAPA AS
    SELECT NUM_ETAPA
    FROM ETAPA
    WHERE DISTANCIA = (SELECT MAX(DISTANCIA) FROM ETAPA);


-- ex 4 b
SELECT C.NOME, EQ.NOME "Equipa"
FROM EQUIPA E , CICLISTA C, PARTICIPA P, ETAPA ET
WHERE C.SIGLA=EQ.SIGLA
AND C.DORSAL = P.DORSAL
AND P.NUM_ETAPA = ET.NUM_ETAPA
AND P.NUM_ETAPA <= (SELECT * FROM VW_MAIORETAPA)
AND UPPER(GENERO) = 'F'
GROUP BY C.NOME, EQ.NOME
HAVING SUM(TEMPO) <= ALL -- tem que ser menor
(
    SELECT SUM(TEMPO)
    FROM EQUIPA E , CICLISTA C, EQUIPA EQ
    WHERE C.DORSAL = P.DORSAL
    WHERE C.SIGLA=EQ.SIGLA
    AND P.NUM_ETAPA = ET.NUM_ETAPA
    AND UPPER(GENERO) = 'F'
    GROUP BY C.NOME, EQ.NOME 
    );
    
    
-- ex 5 
DELETE FROM PARTICIPA
WHERE NUM_ETAPA = 3
AND DORSAL = ( SELECT DORSAL
               FROM CICLISTA
               WHERE UPPER(NOME)= 'JOHN SMITH');




