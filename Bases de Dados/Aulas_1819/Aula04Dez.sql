-- ficha 09

-- ex 1
CREATE SEQUENCE EXP_SEQUENCIA;
SELECT EXP_SEQUENCIA.CURRVAL FROM DUAL; -- precisa primeiro de nextval, só mostra
SELECT EXP_SEQUENCIA.NEXTVAL FROM DUAL; -- incrementa 
SELECT EXP_SEQUENCIA.NEXTVAL FROM DUAL; -- incrementa
SELECT EXP_SEQUENCIA.NEXTVAL FROM DUAL; -- incrementa
SELECT EXP_SEQUENCIA.CURRVAL FROM DUAL; -- seleciona e mostra ultimo nextval
DROP SEQUENCE EXP_SEQUENCIA;

-- ex 2
CREATE TABLE EDITORAS_BACKUP AS
    SELECT CODIGO_EDITORA, NOME, _CONTRIBUINTE, MORADA, TELEFONE, FAX
    FROM EDITORAS;

-- ex 3 ???
CREATE SEQUENCE ESQ_EDITBACK 
    INCREMENT BY 1 
    START WITH 4
    NOMAXVALUE
    NOMINVALUE
    NOCYCLE;
    
-- ex 4

INSERT INTO EDITORAS_BACKUP
    (CODIGO_EDITORA, NOME, N_CONTRIBUINTE, MORADA, TELEFONE, FAX)
VALUES
    (SEQ_EDITBACK.NEXTVAL, 'D.Quixote', '901111111', 'Rua Cidade de Cordova',
    'n.2 2610-038 Alfragide', '707252252', '707252253');

-- ex 5 
SELECT SEQ_EDITBACK.CURRVAL FROM DUAL; -- mostra
SELECT SEQ_EDITBACK.NEXTVAL FROM DUAL; -- incrementa e mostra 
SELECT SEQ_EDITBACK.CURRVAL FROM DUAL; -- mostra 

-- ex 6 
DROP SEQUENCE SEQ_EDITBACK;

-- ex 7
CREATE VIEW LIVROS_INFORMATICA AS
    SELECT TITULO 
    FROM LIVROS 
    WHERE GENERO(UPPER)='INFORMATICA';
    
-- ex 8
INSERT INTO LIVROS_INFORMATICA
    (CODIGO_LIVRO, TITULO, ISBN, GENERO)
VALUES
    (30,'Uma noite de Verão', 8000000001,'Informática');
    
INSERT INTO LIVROS_INFORMATICA
    (CODIGO_LIVRO, TITULO, ISBN, GENERO)
VALUES
    (31,'O céu é azul',8000000002,'Romance');

INSERT INTO LIVROS_INFORMATICA
    (CODIGO_LIVRO, TITULO, ISBN, GENERO)
VALUES
    (32,2, 2,'Longe de tudo',8000000003,'Informática');
    
-- ex 9 
DROP TABLE LIVROS_BACKUP; -- ??

-- ex 10
DROP VIEW LIVROS_INFORMATICA;

--ex 11
CREATE TABLE LIVROS_BACKUP AS 
    SELECT CODIGO_LIVRO, CODIGO_EDITORA, CODIGO_AUTOR, TITULO, ISBN, GENERO,
        PRECO_TABELA, PAGINAS, QUANT_EM_STOCK, UNIDADES_VENDIDAS, DATA_EDICAO
    FROM LIVROS
    
-- ex 12 
CREATE VIEW AUTOR_LIVRO AS 
    SELECT UPPER(AUTORES.NOME) NOME_UPPER, UPPER(LIVROS.AUTORES) TITULO_UPPER
    FROM AUTORES, LIVROS_BACKUP
    WHERE AUTORES.CODIGO.AUTOR= LIVROS_BACKUP.CODIGO_AUTOR
    ORDER BY AUTORE.NOME;
    
-- ex 13 ??
SELECT NOME_UPPER, TITULO_UPPER
FROM AUTOR_LIVRO;

DELETE (SELECT *
        FROM LIVROS_BACKUP);

SELECT NOME_UPPER, TITULO_UPPER
FROM AUTOR_LIVRO;

-- ex 14 
DROP TABLE LIVROS_BAKCUP;

SELECT NOME_UPPER, TITULO_UPPER
FROM AUTOR_LIVRO; -- ERRO

-- ex 15























