-- Exercicios da 4º aula SQL - 2018/2019

-- ex 1
SELECT COUNT(*) AS "Total"
FROM LIVROS
WHERE GENERO='Informática';


-- ex 2
SELECT COUNT(*) AS "Total de Livros",
    ROUND( AVG(PRECO_TABELA), 1 ) AS "Preço Média",
    SUM( UNIDADES_VENDIDAS ) AS "Total de livros vendidos"
FROM LIVROS;


-- ex 3 
SELECT GENERO AS "Genero", COUNT(*) AS "Quantidade"
FROM LIVROS 
GROUP BY GENERO
ORDER BY GENERO ASC;


-- ex 4
SELECT L.TITULO TÍTULO,
    MIN(V.PRECO_UNITARIO) P_MAIS_BAIXO,
    MAX(V.PRECO_UNITARIO) P_MAIS_ALTO,
    ROUND( AVG(V.PRECO_UNITARIO), 2 ) P_MEDIO
FROM LIVROS L, VENDAS V
WHERE L.CODIGO_LIVRO = V.CODIGO_LIVRO
AND GENERO = 'Informática'
GROUP BY TITULO;


-- ex 5
SELECT GENERO, MAX(PRECO_TABELA) - MIN(PRECO_TABELA) AS "Diferença"
FROM LIVROS
GROUP BY GENERO;

-- ex 6 
SELECT L.TITULO AS TÍTULO,
    L.PRECO_TABELA AS PRECO,
    SUM(V.QUANTIDADE) AS NUM_VENDIDOS,
    SUM(V.QUANTIDADE*L.PRECO_TABELA) AS REC_ESPERADA,
    SUM(V.QUANTIDADE*V.PRECO_UNITARIO) AS REC_EFECTIVA
FROM LIVROS L, VENDAS V
WHERE L.CODIGO_LIVRO = V.CODIGO_LIVRO
GROUP BY L.PRECO_TABELA, TITULO;

-- ex 7 
SELECT GENERO, CEIL( AVG(PRECO_TABELA) ) AS "Preço Médio"
FROM LIVROS
GROUP BY GENERO
HAVING COUNT(TITULO) > 4
ORDER BY 2 ASC;

-- ex 8
SELECT A.NOME, MIN(L.PRECO_TABELA) AS "Preco Minimo"
FROM AUTORES A , LIVROS L 
WHERE A.CODIGO_AUTOR = L.CODIGO_AUTOR
GROUP BY A.NOME
HAVING MIN(L.PRECO_TABELA) >= 30 
ORDER BY 2;

-- ex 9 
SELECT C.CODIGO_CLIENTE,
    C.NOME,
    SUM(V.QUANTIDADE) AS " NºLivros" ,
    ROUND( AVG(V.PRECO_UNITARIO)) AS "Preco Medio",
    COUNT(DISTINCT(A.CODIGO_AUTOR)) AS "Nº Autores Diferente"
FROM CLIENTES C, VENDAS V, LIVROS L, AUTORES A
WHERE C.CODIGO_CLIENTE = V.CODIGO_CLIENTE
AND V.CODIGO_LIVRO = L.CODIGO_LIVRO
AND L.CODIGO_AUTOR = A.CODIGO_AUTOR
AND C.MORADA LIKE '%Lisboa'
GROUP BY C.CODIGO_CLIENTE, C.NOME
HAVING SUM(V.QUANTIDADE) > 3 
AND COUNT(DISTINCT L.CODIGO_EDITORA) = 1;

-- ex 10 
SELECT A.NOME,
    DECODE( COUNT(L.TITULO), 0, 'nenhum', count(l.titulo)) AS "Num. Livros"
FROM AUTORES A
LEFT OUTER JOIN LIVROS L 
ON L.CODIGO_AUTOR = A.CODIGO_AUTOR
GROUP BY A.NOME
ORDER BY A.NOME;

-- Exercicios Propostos -----------------

-- ex a
SELECT COUNT(CODIGO_LIVRO) "Total de Livros"
FROM LIVROS;

-- ex b
SELECT MIN(L.PRECO_TABELA) PRECO_MAIS_BAIXO,
    MAX(L.PRECO_TABELA) PRECO_MAIS_ALTO,
    ROUND( AVG(PRECO_TABELA), 1 ) PRECO_MEDIO
FROM LIVROS L, EDITORAS E
WHERE L.CODIGO_EDITORA = E.CODIGO_EDITORA
AND E.NOME = 'FCA - EDITORA';

-- ex c 
SELECT GENERO AS "Genero", COUNT(*) AS "Quantidade"
FROM LIVROS L, AUTORES A
WHERE L.CODIGO_AUTOR = A.CODIGO_AUTOR
AND A.NOME LIKE '%a%' 
OR A.MORADA LIKE '%Coimbra%'
GROUP BY GENERO
ORDER BY GENERO ASC;

-- ex d
SELECT E.NOME AS NOME,
    L.GENERO AS GENERO,
    MAX(L.UNIDADES_VENDIDAS) AS MAXIMO,
    MIN(L.UNIDADES_VENDIDAS) AS MINIMO,
    AVG(L.UNIDADES_VENDIDAS) AS MEDIO,
    COUNT(L.CODIGO_LIVRO) AS "Nº Livros"
FROM EDITORAS E, LIVROS L, AUTORES A 
WHERE E.CODIGO_EDITORA = L.CODIGO_EDITORA
AND L.CODIGO_AUTOR = A.CODIGO_AUTOR
AND A.NOME NOT LIKE 'Paulo Loureiro'
GROUP BY E.NOME, L.GENERO
HAVING SUM(L.UNIDADES_VENDIDAS) <= 10000
ORDER BY 1,2,3;
    